/* Grid System ===============================================================*/

.container {
  max-width: 100%;
  width: 100%;
  margin: auto;
  padding-left: $gutter;
  padding-right: $gutter;
  &.xl {
    width: $xl;
  }
  &.l {
    width: $l;
  }
  &.m {
    width: $m;
  }
  &.s {
    width: $s;
  }
  @include s() {
    padding-left: $gutter/2;
    padding-right: $gutter/2;
  }
}

// Rows
.row {
  margin-left: -($gutter/2);
  margin-right: -($gutter/2);

  // Standard Grid
  &:after {
    content: '';
    display: table;
    clear: both;
  }

  // Reverse Grid
  &.reverse { @include reverse(); }
  &.xl-reverse { @include xl() { @include reverse(); } }
  &.l-reverse { @include l() { @include reverse(); } }
  &.m-reverse { @include m() { @include reverse(); } }
  &.s-reverse { @include s() { @include reverse(); } }

  // Table Grid
  &.table { @include table(); }
  &.xl-table { @include xl() { @include table(); } }
  &.l-table { @include l() { @include table(); } }
  &.m-table { @include m() { @include table(); } }
  &.s-table { @include s() { @include table(); } }

  // Collapsed Grid
  &.collapse { @include collapse(); }
  &.xl-collapse { @include xl() { @include collapse(); } }
  &.l-collapse { @include l() { @include collapse(); } }
  &.m-collapse { @include m() { @include collapse(); } }
  &.s-collapse { @include s() { @include collapse(); } }
}

// Column Grid
.column {
  float: left;
  min-height: 0.125rem;
  padding-left: $gutter/2;
  padding-right: $gutter/2;

  // Build out our column grids
  @for $count from 1 through length($columns) {
    $column-count: nth($columns, $count);

    @for $column-index from 1 through $column-count {
      $column-class: column-class($count, $column-count, $column-index, l);

      &.#{$column-class} { @include column-width(percentage($column-index/$column-count)); }
    }
    @include m() {
      @for $column-index from 1 through $column-count {
        $column-class: column-class($count, $column-count, $column-index, m);

        &.#{$column-class} { @include column-width(percentage($column-index/$column-count)); }
      }
    }
    @include s() {
      @for $column-index from 1 through $column-count {
        $column-class: column-class($count, $column-count, $column-index, s);

        &.#{$column-class} { @include column-width(percentage($column-index/$column-count)); }
      }
    }

    // Uniform Height Clearing

    @include l() {
      @for $column-index from 1 through $column-count {
        $column-class: column-class($count, $column-count, $column-index, l);
        @include column-clear($column-count, $column-index, $column-class);
      }
    }
    @include m() {
      @for $column-index from 1 through $column-count {
        $column-class: column-class($count, $column-count, $column-index, m);
        @include column-clear($column-count, $column-index, $column-class);
      }
    }
    @include s() {
      @for $column-index from 1 through $column-count {
        $column-class: column-class($count, $column-count, $column-index, s);
        @include column-clear($column-count, $column-index, $column-class);
      }
    }
  }
}
