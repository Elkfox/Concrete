/* Mixins ====================================================================*/

// Prefixer (See https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss)
@mixin prefixer($property, $value, $prefixes:$prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

// Clearfix
@mixin clearfix() {
  display: block;
  &:after {
    content: '';
    display: table;
    clear: both;
  }
  *zoom: 1;
}

// Screen Sizes
@mixin s() {
  @media (max-width: $s) {
    @content;
  }
}
@mixin s-m() {
  @media (max-width: $l - 1px) {
    @content;
  }
}
@mixin m() {
  @media (min-width: $s + 1px) and (max-width: $l - 1px) {
    @content;
  }
}
@mixin m-l() {
  @media (min-width: $s + 1px) and (max-width: $xl - 1px) {
    @content;
  }
}
@mixin l() {
  @media (min-width: $l) {
    @content;
  }
}
@mixin m-xl() {
  @media (min-width: $s + 1px) {
    @content;
  }
}
@mixin xl() {
  @media (min-width: $xl) {
    @content;
  }
}

// Flex
@mixin flex() {
  display: -webkit-box !important;
  display: -moz-box !important;
  display: -ms-flexbox !important;
  display: -webkit-box !important;
  display: -webkit-flexbox !important;
  display: -webkit-flex !important;
  display: flex !important;
}
@mixin flex-direction($direction) {
  @include prefixer(flex-direction, $direction);
}
@mixin flex-wrap($wrap) {
  @include prefixer(flex-wrap, $wrap);
}
@mixin flex-flow($direction, $wrap) {
  @include flex-direction($direction);
  @include flex-wrap($wrap);
}
@mixin flex-grow($grow) {
  @include prefixer(flex-grow, $grow);
}
@mixin box-orient($orient) {
  @include prefixer(box-orient, $orient);
}
@mixin align-items($align) {
  @include prefixer(align-items, $align);
}
@mixin align-content($align) {
  @include prefixer(align-content, $align);
}
@mixin justify-content($justify) {
  @include prefixer(justify-content, $justify);
}

// Table Grids
@mixin table() {
  display: table;
  table-layout: fixed;
  width: 100%;
  margin-left: 0;
  margin-right: 0;
  > .column {
    float: none;
    display: table-cell;
    &:first-of-type {
      padding-left: 0;
    }
    &:last-of-type {
      padding-right: 0;
    }
  }
}

// Reverse Grid
@mixin reverse() {
  direction: rtl;
  > .column {
    direction: ltr;
    float: right;
  }
}

// Collapsed Columns
@mixin collapse() {
  margin-left: 0;
  margin-right: 0;
  > .column {
    padding-left: 0;
    padding-right: 0;
  }
}

// Verically Align
@mixin vertical-align() {
  position: relative;
  top: 50%;
  @include prefixer(transform, perspective(1px) translateY(-50%));
}

// Transition Property (for legacy support)
@mixin transition-property() {
  -webkit-transition-property: -webkit-transform;
  -moz-transition-property: -moz-transform;
  transition-property: transform;
}

// Transitions
@mixin transition() {
  @include prefixer(transition, $transition);
}

// Overlays
@mixin overlay() {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}
