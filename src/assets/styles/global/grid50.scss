/**
* Requires the following variables:
* $gutter: 50px;
* // Screen Sizes
* $s: 600px;
* $m: 850px;
* $l: 1150px;
* $xl: 1450px;
* // Column structure
* $columns: 12;
**/

/* Grid50 mixins =============================================================*/

// Screen Sizes
@mixin s() {
  @media (max-width: $s) {
    @content;
  }
}
@mixin s-m() {
  @media (max-width: $l - 1px) {
    @content;
  }
}
@mixin m() {
  @media (min-width: $s + 1px) and (max-width: $l - 1px) {
    @content;
  }
}
@mixin m-l() {
  @media (min-width: $s + 1px) and (max-width: $xl) {
    @content;
  }
}
@mixin l() {
  @media (min-width: $l) {
    @content;
  }
}
@mixin m-xl() {
  @media (min-width: $s + 1px) {
    @content;
  }
}
@mixin xl() {
  @media (min-width: $xl) {
    @content;
  }
}

// Column widths
@mixin column($width) {
  width: $width;
}

// Table Grids
@mixin table() {
  display: table;
  table-layout: fixed;
  width: 100%;
  margin-left: 0;
  margin-right: 0;
  > .column {
    float: none;
    display: table-cell;
    &.middle {
      vertical-align: middle;
    }
    &.top {
      vertical-align: top;
    }
    &.bottom {
      vertical-align: bottom;
    }
    &:first-of-type {
      padding-left: 0;
    }
    &:last-of-type {
      padding-right: 0;
    }
  }
}

/* Grid50 Grids ==============================================================*/

.container {
  max-width: 100%;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: $gutter;
  padding-right: $gutter;
  &.xl {
    max-width: $xl;
  }
  &.l {
    max-width: $l;
  }
  &.m {
    max-width: $m;
  }
  &.s {
    max-width: $s;
  }
  @include s() {
    padding-left: $gutter/2;
    padding-right: $gutter/2;
  }
}

// Rows
.row {
  margin-left: -($gutter/2);
  margin-right: -($gutter/2);

  // Table Grid
  &.table { @include table(); }
  &.xl-table { @include xl() { @include table(); } }
  &.l-table { @include l() { @include table(); } }
  &.m-table { @include m() { @include table(); } }
  &.s-table { @include s() { @include table(); } }

  // Standard Grid
  &:after {
    content: "";
    display: table;
    clear: both;
  }
  &.collapse {
    margin-left: 0;
    margin-right: 0;
    .column {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

// Column Grid
.column {
  float: left;
  min-height: 0.125rem;
  padding-left: $gutter/2;
  padding-right: $gutter/2;
  @for $i from 1 through $columns {
    &.l#{$i} { @include column(percentage($i/$columns)); }
  }
  @include m() {
    @for $i from 1 through $columns {
      &.m#{$i} { @include column(percentage($i/$columns)); }
    }
  }
  @include s() {
    @for $i from 1 through $columns {
      &.s#{$i} { @include column(percentage($i/$columns)); }
    }
  }
  // Uniform Height Clearing
  @include l() {
    &:nth-child(6n+1).l2 { clear: both; }
    &:nth-child(4n+1).l3 { clear: both; }
    &:nth-child(3n+1).l4 { clear: both; }
    &:nth-child(2n+1).l6 { clear: both; }
  }
  @include m() {
    &:nth-child(6n+1).m2 { clear: both; }
    &:nth-child(4n+1).m3 { clear: both; }
    &:nth-child(3n+1).m4 { clear: both; }
    &:nth-child(2n+1).m6 { clear: both; }
  }
  @include s() {
    &:nth-child(6n+1).s2 { clear: both; }
    &:nth-child(4n+1).s3 { clear: both; }
    &:nth-child(3n+1).s4 { clear: both; }
    &:nth-child(2n+1).s6 { clear: both; }
  }
}
