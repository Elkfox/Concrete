/**
* Styles for forms
* Includes additional styles for Shopify forms
*
* Requirements: grid50.scss, grid50.mixins.scss
**/

/* Form Variables ============================================================*/

$formFieldHeight: 44px;
$colorPlaceholder: $colorBorder;

/* Form Styling ==============================================================*/

// Input Styling
input[type="text"],
input[type="email"],
input[type="number"],
input[type="tel"],
input[type="password"],
input[type="search"],
textarea,
select {
  height: $formFieldHeight;
  max-width: 100%;
  border: $borderWeight $borderStyle $colorBorder;
  border-radius: $borderRadius;
  padding: 0 $fontBaseSize;
  text-indent: 0;
  @include prefixer(appearance, none);

  // @include transition();

  &.error {
    border-color: $colorPlaceholder;
  }
  // Webkit Placeholders
  &::placeholder,
  &::-webkit-input-placeholder,
  // Firefox Placeholders
  &:-moz-placeholder,
  &::-moz-placeholder,
  // IE & Edge Placeholders
  &:-ms-input-placeholder,
  &::-ms-input-placeholder {
    color: $colorPlaceholder;
    text-indent: 0;
  }
  // Webkit Autofill
  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus {
    border: $borderWeight $borderStyle $colorBorder;
    border-radius: $borderRadius;
    -webkit-text-fill-color: $colorText;
    -webkit-box-shadow: 0 0 0px $gutter*100 rgba($colorPlaceholder, 0.35) inset;
  }
  // Firefox Selector Options
  option {
    display: block;
    background-color: $colorBackground;
    color: $colorText;
    border: 0;
  }
}
textarea {
  height: initial;
  overflow: auto;
  // resize: horizontal;
  line-height: inherit;
  padding: $spacing;
  // For Firefox
  font-family: inherit;
}

// Labels
label {
  font-weight: $fontBold;
}

// Checkboxes
input[type="checkbox"] {
  // display: none;
  // & + label {
  //   &:before {
  //     content: '';
  //     display: inline-block;
  //     width: $spacing*2;
  //     height: $spacing*2;
  //     line-height: ($spacing*2) - ($borderWeight*2);
  //     margin-right: $spacing;
  //     border: $borderWeight $borderStyle $colorBorder;
  //     border-radius: 100%;
  //     background-color: transparent;
  //     color: $colorBackground;
  //     font-size: $small;
  //     text-align: center;
  //     vertical-align: top;
  //     @include transition();
  //   }
  // }
  // &:checked {
  //   & + label {
  //     &:before {
  //       content: '\2714';
  //       border-color: $colorBrand;
  //       background-color: $colorBrand;
  //     }
  //   }
  // }
}

// Buttons
button, .button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
  max-width: 100%;
  height: $formFieldHeight;
  padding: 0 $fontBaseSize;
  border: $borderWeight $borderStyle $colorBrand;
  border-radius: $borderRadius;
  background-color: $colorBrand;
  text-align: center;
  color: $colorBackground;
  cursor: pointer;
  @include prefixer(appearance, none);

  // @include transition();

  &:hover {
    background-color: transparent;
    color: $colorBrand;
  }
  &:disabled, &.disabled {
    cursor: default;
    background-color: $colorBorder;
    border-color: $colorBorder;
    color: $colorBackground;
    &:hover {
      @extend .disabled;
    }
  }
  &.unstyled {
    background-color: transparent;
    height: initial;
    border: none;
    @extend a;
    &:hover {
      @extend a:hover;
    }
  }
}
a.button {
  display: inline-block;
  text-decoration: none;
  line-height: $formFieldHeight - ($borderWeight*2);
}

// .select-wrapper {
//   display: inline-block;
//   position: relative;
//   &:after {
//     content: '\2304';
//     position: absolute;
//     right: $spacing*2;
//     top: 0;
//     bottom: 0;
//     line-height: 100%;
//     // font-size: $h1;
//     color: $colorText;
//   }
//   select {
//     width: 100%;
//     padding-right: $spacing*5;
//     &::-ms-expand {
//       display: none;
//     }
//   }
// }

.errors, .success {
  padding: $gutter/3.5;
  margin: $gutter/2 auto;
  color: $colorBackground;
  background-color: $colorPlaceholder;
  border: $borderWeight $borderStyle $colorPlaceholder;
  border-radius: $borderRadius;
  li {
    margin-bottom: $gutter/3;
    &:last-of-type {
      margin-bottom: 0;
    }
  }
  a {
    color: $colorBackground;
  }
}
