/**
* Import additional stylesheets into this sheet using CSS imports:
* Example: @import url('./global/form.scss');
**/

// Broad spectrum cross browser reset
@import '~normalize.css/normalize';

// Settings, mixins, Grid50 resets
@import url('../global/variables.scss.liquid');
@import url('../global/grid50.mixins.scss');
@import url('../global/grid50.reset.scss');

// Basic typographic elements
@import url('../global/typography.scss');

// Grid50
@import url('../global/grid50.scss');
@import url('../global/grid50.flex.scss');
@import url('../global/grid50.helpers.scss');

// Take control of common elements
@import url('../global/forms.scss');
@import url('../global/media.scss');
@import url('../global/social.scss');

// Just for inspiration
@import url('../global/animation.scss');

/* Global ====================================================================*/

body {
  background-color: $colorBackground;
  color: $colorText;
}

a {
  color: $colorBrand;
  text-decoration: underline;
  &:hover {
    text-decoration: none;
  }
}

img {
  max-width: 100%;
}

hr {
  display: block;
  height: $borderWeight;
  border: 0;
  border-top: $borderWeight $borderStyle $colorBorder;
}

/* Helpers ===================================================================*/

.visually-hidden {
  @include visually-hidden;
}

/**
* Simple Javascript detection
* The 'noscript' class is removed from document html if Javascript is available
* Javascript dependant elements should be wrapped in the 'js' class
**/

html.noscript .js {
  display: none;
}
html.js .noscript {
  display: none;
}

/**
* Simple cookie detection
* The 'cookies' class is added to the document html when cookies are supported,
* and the 'no-cookies' class is added when they are not
* Example: '<div class="no-cookies">Show when cookies aren't supported</div>'
**/

html.no-cookies {
  .cookies {
    display: none;
  }
  .no-cookies {
    display: block;
  }
}
html.cookies {
  .cookies {
    display: block;
  }
  .no-cookies {
    display: none;
  }
}

/* RTE containers ============================================================*/

.rte {
  margin-bottom: 1rem;
  p:not(:last-child) {
    margin-bottom: 1rem;
  }
  li {
    list-style-type: circle inside;
  }
  ol {
    list-style-type: lower-alpha;
  }
}

/* Header ====================================================================*/

header {
  .logo {
    margin: 0;
  }
}

/* Navigation ================================================================*/

/**
* The starting point for dropdown menus is about as light as is possible
**/

nav {
  ul {
    > li {
      position: relative;
      ul {
        display: none;
        position: absolute;
        top: 100%;
        z-index: 2;

        // Demo styles
        border: $borderWeight $borderStyle $colorBrand;
        background-color: $colorBackground;
        padding: $spacing;

        li {
          display: block;
        }
      }
      &:hover {
        ul {
          display: block;
        }
      }
    }
  }
}

/* Mini cart =================================================================*/

/**
* The preview cart is provided as a simple demo of a non-Ajax cart summary
**/

#cartPreview {
  position: relative;
  display: inline-block;
  > div {
    display: none;
    position: absolute;
    top: 100%;
    z-index: 2;

    // Demo styles
    border: $borderWeight $borderStyle $colorBrand;
    background-color: $colorBackground;
    padding: $spacing;
    img {
      float: left;
      margin-right: $spacing;
    }

  }
  &:hover {
    > div {
      display: block;
      width: 300px;
    }
  }
}

/* Blogs =====================================================================*/

.template-blog #MainContent {
  article {
    margin-bottom: $spacing*4;
    h2, .rte {
      margin-top: $spacing*2;
    }
  }
}

.template-article #MainContent {
  header {
    margin: $spacing*2 0;
  }
  #comment_form, #comment_form p {
    margin: $spacing*2 0;
  }
}

/* Customers =================================================================*/

/**
* The 'form-container' class makes Shopify forms behave nicely
**/

.form-container {
  form {
    width: 100%;
  }
  // Add the class 'wide' to make the form grow to fit the parent element
  &.wide {
    max-width: 100%;
  }
  // Add the class 'narrow' to limit the form width and center within its parent
  &.narrow {
    max-width: 25em;
    margin: 0 auto;
  }
  input[type="text"],
  input[type="email"],
  input[type="number"],
  input[type="tel"],
  input[type="password"],
  textarea {
    width: 100%;
    @include clearfix();
    &:not(:last-child) {
      margin-bottom: $spacing;
    }
  }
}

// Responsive Forms
@include s() {
  form,
  button, .button,
  input,
  textarea {
    width: 100%;
    @include clearfix();
    &:not(:last-child) {
      margin-bottom: $spacing*2;
    }
  }
}
